{
  "openapi": "3.1.0",
  "info": {
    "title": "TFT Legends",
    "version": "1.0.0",
    "description": "API for retrieving the best and worst TFT augments."
  },
  "servers": [
    {
      "url": "https://r6rhano8oc.execute-api.us-east-1.amazonaws.com"
    }
  ],
  "paths": {
    "/Prod/meta/augments/worst": {
      "get": {
        "description": "Get worst augments in TFT",
        "operationId": "GetWorstAugments",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to be retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {}
      }
    },
    "/Prod/meta/items/by-champion-name": {
      "get": {
        "description": "Get best items for given champion",
        "operationId": "GetBestItemsForChampion",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to be retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "championName",
            "in": "query",
            "description": "Name of the champion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/Prod/meta/augments/top": {
      "get": {
        "description": "Get top augments in TFT",
        "operationId": "GetBestAugments",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to be retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {}
      }
    },
    "/Prod/composition/random-winning": {
      "get": {
        "description": "Get random winning composition",
        "operationId": "GetRandomWinningComposition",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to be retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {}
      }
    },
    "/Prod/composition/query": {
      "post": {
        "description": "Get compositions by query",
        "operationId": "GetCompositionsByQuery",
        "requestBody": {
          "description": "Query for compositions",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQueryRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChampionQuery": {
        "type": "object",
        "properties": {
          "championName": {
            "type": "string"
          },
          "championTier": {
            "type": "number"
          }
        },
        "required": [
          "championName"
        ],
        "example": [
          {
            "championName": "Darius"
          }
        ]
      },
      "TraitQuery": {
        "type": "object",
        "properties": {
          "traitName": {
            "type": "string"
          },
          "traitTier": {
            "type": "number"
          }
        },
        "required": [
          "traitName"
        ],
        "example": [
          {
            "traitName": "Noxus"
          }
        ]
      },
      "ItemQuery": {
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string"
          },
          "championName": {
            "type": "string"
          }
        },
        "required": [
          "itemName"
        ],
        "example": [
          {
            "itemName": "Infinity Edge"
          }
        ]
      },
      "AugmentQuery": {
        "type": "object",
        "properties": {
          "augmentName": {
            "type": "string"
          }
        },
        "required": [
          "augmentName"
        ],
        "example": [
          {
            "augmentName": "Noxus Trait"
          }
        ]
      },
      "FilterQueryRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "default": 10,
            "minimum": 1,
            "maximum": 100,
            "example": 20
          },
          "placement": {
            "type": "integer",
            "default": 1,
            "example": 1,
            "minimum": 1,
            "maximum": 8
          },
          "champions": {
            "items": {
              "$ref": "#/components/schemas/ChampionQuery"
            },
            "type": "array"
          },
          "traits": {
            "items": {
              "$ref": "#/components/schemas/TraitQuery"
            },
            "type": "array"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ItemQuery"
            },
            "type": "array"
          },
          "augments": {
            "items": {
              "$ref": "#/components/schemas/AugmentQuery"
            },
            "type": "array"
          }
        }
      }
    }
  }
}
